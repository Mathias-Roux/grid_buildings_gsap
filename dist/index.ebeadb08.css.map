{"mappings":";;AAMA;;;;;ACJA;;;;;;;;AASA;;;;;;AAMA;;;;AAIA;;;;;;AAMA;;;;;;;;AAQA;;;;AAIA;;;;;AAKA;;;;AAIA;EACE;;;;;;;ACjDF;;;;;;;;;;AAUA;;;;;;;;;;;AAWA;;;;AAIA;;;;;;;AAOA;;;;;;AAMA;;;;;AACA;;;;AACA;;;;AACA;;;;;AAEA;;;;;AC3CA;;;;AAMA;;;;;;;;;;;;;AAaA;;;;AAIA;;;;AAIA;;;;;;;AAOA;;;;;;;;;;AAUA;;;;;;;;AE3CA;;;;AAMA;;;;AASA;;;;;;;;;;;AAaA;;;;;;AAWA;;;;;AAQA;;;;;;;;AChDA;;;;;AAEA;EACE;;;;;;;EAOA;;;;;;;;;;;EAWA;;;;;;EAMA;;;;;;;;;;EAaA","sources":["src/styles/Variables.css","src/styles/Frame.css","src/styles/Grid.css","src/styles/App.css","src/styles/index.css","node_modules/splitting/dist/splitting.css","node_modules/splitting/dist/splitting-cells.css"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Philosopher:ital,wght@0,400;0,700;1,400&display=swap');\n/*regular 400*/\n/*italic 400*/\n/*bold 700*/\n\n\nh1, h2, h3, h4, h5, h6{\n  font-family: 'Philosopher', sans-serif;\n  font-weight: bold 700;\n}","@import url('https://fonts.googleapis.com/css2?family=Square+Peg&display=swap');\n\n.frame{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: 1rem 2vw;\n\n}\n\n.frame__nav{\n  display: flex;\n  justify-content: space-around;\n  width: 300px;\n}\n\n.frame__title--wrap{\n  margin-bottom: 10px;\n}\n\n.frame__signature{\n  margin-bottom: 10px;\n  width: 100px;\n  transform: rotate(-16deg);\n}\n\n.frame__signature a{\n  font-family: 'Square Peg', cursive;\n  text-decoration: none;\n  color: white;\n  font-size: 30px;\n  opacity: 0.6;\n}\n\n.frame__signature a:visited{\n  color: white;\n}\n\n.nav__link > img{\n  width: 45px;\n  filter: grayscale(60%);\n}\n\n.nav__link > img:hover{\n  filter: grayscale(0%);;\n}\n\n@media screen and (min-width: 53em){\n  .frame{\n    display: flex;\n    justify-content: space-around;\n    flex-direction: row;\n  }\n}",".grid__content{\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: 19vmin;\n  position: absolute;\n  padding: 0 1.5vw 0 1.5vw;\n  grid-gap: 1em;\n  overflow: hidden;\n}\n\nh1{\n  margin: 0;\n  position: absolute;\n  top: 30%;\n  left: 50%;\n  transform: translateX(-50%);\n  text-transform: uppercase;\n  font-size: clamp(80px, 8vw, 150px);\n  overflow: hidden;\n}\n\n.content__photo--c1-r1{\n  grid-column: 1; grid-row: 1 / 5;\n}\n\n.content__photo--c1-r1 > img{\n  object-fit: cover;\n  width: 100%;\n  height: 95%;\n  overflow: hidden;\n}\n\n.grid__paragraph{\n  display: flex;\n  align-items: center;\n  padding: 0 0 0 2vw;\n}\n\n.c2-r1{grid-column: 2 / 5; grid-row: 1; font-size: 9vw;}\n.c2-r2{grid-column: 2 / 4; grid-row: 2;}\n.c2-r3{grid-column: 2 / 4; grid-row: 3;}\n.c2-r4{grid-column: 2 / 4; grid-row: 4; font-style: italic;}\n\n.c4-r4{grid-column: 4; grid-row: 4; display: flex;}\n","*,\n*::after,\n*::before{\n  box-sizing: border-box;\n}\n\nbody{\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  background-color: #282c34;\n  font-family: 'Philosopher', sans-serif;\n  color: white;\n  -webkit-font-smoothing: antialised;\n  -moz-osx-font-smoothing: grayscale;\n  overflow: hidden;\n}\n\nbody, body a{\n  cursor: none;\n}\n\n.char{\n  will-change: transform;\n}\n\n.circle-cursor{\n  position: fixed;\n  left: 0;\n  top: 0;\n  pointer-events: none;\n}\n\n.circle-cursor--inner{\n  width: 5px;\n  height: 5px;\n  left: -2.5px;\n  top:  -2.5px;\n  border-radius: 50%;\n  z-index: 11000;\n  background: white;\n}\n\n.circle-cursor--outer{\n  width: 100vw;\n  height: 100vh;\n  z-index: 12000;\n}\n","@import './Variables.css';\n@import './Frame.css';\n@import './Grid.css';\n@import './App.css';\n\n\n\n","/* Recommended styles for Splitting */\n.splitting .word,\n.splitting .char {\n  display: inline-block;\n}\n\n/* Psuedo-element chars */\n.splitting .char {\n  position: relative;\n}\n\n/**\n * Populate the psuedo elements with the character to allow for expanded effects\n * Set to `display: none` by default; just add `display: block` when you want\n * to use the psuedo elements\n */\n.splitting .char::before,\n.splitting .char::after {\n  content: attr(data-char);\n  position: absolute;\n  top: 0;\n  left: 0;\n  visibility: hidden;\n  transition: inherit;\n  user-select: none;\n}\n\n/* Expanded CSS Variables */\n\n.splitting {\n  /* The center word index */\n  --word-center: calc((var(--word-total) - 1) / 2);\n\n  /* The center character index */\n  --char-center: calc((var(--char-total) - 1) / 2);\n\n  /* The center character index */\n  --line-center: calc((var(--line-total) - 1) / 2);\n}\n\n.splitting .word {\n  /* Pecent (0-1) of the word's position */\n  --word-percent: calc(var(--word-index) / var(--word-total));\n\n  /* Pecent (0-1) of the line's position */\n  --line-percent: calc(var(--line-index) / var(--line-total));\n}\n\n.splitting .char {\n  /* Percent (0-1) of the char's position */\n  --char-percent: calc(var(--char-index) / var(--char-total));\n\n  /* Offset from center, positive & negative */\n  --char-offset: calc(var(--char-index) - var(--char-center));\n\n  /* Absolute distance from center, only positive */\n  --distance: calc(\n     (var(--char-offset) * var(--char-offset)) / var(--char-center)\n  );\n\n  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */\n  --distance-sine: calc(var(--char-offset) / var(--char-center));\n\n  /* Distance from center where 1 is far left/far right, 0 is center */\n  --distance-percent: calc((var(--distance) / var(--char-center)));\n}\n",".splitting.cells img { width: 100%; display: block; }\n\n@supports ( display: grid ) {\n  .splitting.cells {\n    position: relative;\n    overflow: hidden;\n    background-size: cover;\n    visibility: hidden;\n  }\n\n  .splitting .cell-grid {\n    background: inherit;\n    position: absolute;\n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100%;\n    display: grid;\n    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );\n  }\n\n  .splitting .cell {\n    background: inherit;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .splitting .cell-inner {\n    background: inherit;\n    position: absolute;\n    visibility: visible;\n    /* Size to fit the whole container size */\n    width: calc(100% * var(--col-total));\n    height: calc(100% * var(--row-total));\n    /* Position properly */\n    left: calc(-100% * var(--col-index));\n    top: calc(-100% * var(--row-index));\n  }\n\n  /* Helper variables for advanced effects */\n  .splitting .cell {\n    --center-x: calc((var(--col-total) - 1) / 2);\n    --center-y: calc((var(--row-total) - 1) / 2);\n\n    /* Offset from center, positive & negative */\n    --offset-x: calc(var(--col-index) - var(--center-x));\n    --offset-y: calc(var(--row-index) - var(--center-y));\n\n    /* Absolute distance from center, only positive */\n    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );\n\n    /* Absolute distance from center, only positive */\n    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );\n  }\n}\n\n"],"names":[],"version":3,"file":"index.ebeadb08.css.map","sourceRoot":"/__parcel_source_root/"}